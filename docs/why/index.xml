<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Why SQL Components on My Docs</title><link>/docs/why/</link><description>Recent content in Why SQL Components on My Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright (c) 2020-2024 Thulite</copyright><atom:link href="/docs/why/index.xml" rel="self" type="application/rss+xml"/><item><title>SQL Builders</title><link>/docs/why/sql-builders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/why/sql-builders/</guid><description>SQL Builders are tools designed to simplify database interaction by abstracting away complex SQL queries and connection management. They help developers focus on writing business logic rather than managing database connections and handling raw SQL queries.</description></item><item><title>JPA</title><link>/docs/why/jpa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/why/jpa/</guid><description>Java Persistence API (JPA) is a well-known framework that abstracts most of the database interaction for Java applications by utilizing Object-Relational Mapping (ORM).</description></item><item><title>Jooq</title><link>/docs/why/jooq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/why/jooq/</guid><description>JOOQ (Java Object Oriented Querying) is a powerful and widely-used Java framework for building type-safe SQL queries. JOOQâ€™s primary goal is to seamlessly integrate SQL into Java code by generating Java classes from a database schema, enabling developers to work with SQL in a type-safe, programmatic way.</description></item></channel></rss>