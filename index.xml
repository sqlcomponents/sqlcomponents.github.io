<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Welcome to SQL Components on My Docs</title><link>/</link><description>Recent content in Welcome to SQL Components on My Docs</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright (c) 2020-2024 Thulite</copyright><lastBuildDate>Thu, 07 Sep 2023 16:27:22 +0200</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>SQL Builders</title><link>/docs/why/sql-builders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/why/sql-builders/</guid><description>SQL Builders are tools designed to simplify database interaction by abstracting away complex SQL queries and connection management. They help developers focus on writing business logic rather than managing database connections and handling raw SQL queries.</description></item><item><title>JPA</title><link>/docs/why/jpa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/why/jpa/</guid><description>Java Persistence API (JPA) is a well-known framework that abstracts most of the database interaction for Java applications by utilizing Object-Relational Mapping (ORM).</description></item><item><title>Jooq</title><link>/docs/why/jooq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/why/jooq/</guid><description>JOOQ (Java Object Oriented Querying) is a powerful and widely-used Java framework for building type-safe SQL queries. JOOQâ€™s primary goal is to seamlessly integrate SQL into Java code by generating Java classes from a database schema, enabling developers to work with SQL in a type-safe, programmatic way.</description></item><item><title>Installation</title><link>/docs/getting-started/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/getting-started/installation/</guid><description>In order to generate the code at compiletime, SQLComponents has to be added as a build plugin ( under build &amp;gt; plugins in pom.</description></item><item><title>Connection</title><link>/docs/getting-started/connection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/getting-started/connection/</guid><description>We need configure SQLComponents to connect to the database instance. we should create a file named sql-components.yml as given below</description></item><item><title>Basics</title><link>/docs/guides/basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/guides/basics/</guid><description>SQL Components simplifies how your Java application interacts with relational databases by providing three core concepts:
DataManager: Handles database connections and manages access to various database objects.</description></item><item><title>Table</title><link>/docs/guides/table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/guides/table/</guid><description>Store will act as inteface for all the SQL operations againts tables. For.eg For Movie table, you can get the Store from DataManages as given below</description></item><item><title>View</title><link>/docs/guides/view/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/guides/view/</guid><description>View will act as inteface for all the SQL operations againts views. For.eg For Movie view, you can get the Store from DataManages as given below</description></item><item><title>Stored Procedure</title><link>/docs/guides/stored-procedure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/guides/stored-procedure/</guid><description>Stored Procedures are a powerful feature in relational databases that allow you to encapsulate SQL logic on the database side.</description></item><item><title>The Future of Java Persistence</title><link>/blog/the-future-of-java-persistence/</link><pubDate>Thu, 07 Sep 2023 16:27:22 +0200</pubDate><guid>/blog/the-future-of-java-persistence/</guid><description>we will explore the history, theory, and technology behind the evolution of persistence technologies for Java applications.</description></item></channel></rss>